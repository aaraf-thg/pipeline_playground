name: CI Pipeline with Auto Tagging

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            fetch-depth: 0

      - name: Delete Tags
        run: |
          # Get current date in seconds since the epoch
          current_date=$(date +%s)

          # 10 minutes in seconds
          ten_minutes=$((10 * 60))

          # Get all tags with their commit date and delete if older than 10 minutes
          for tag in $(git for-each-ref --sort=creatordate --format '%(refname:short) %(creatordate:unix)' refs/tags); do
            tag_name=$(echo "$tag" | awk '{print $1}')
            tag_date=$(echo "$tag" | awk '{print $2}')
            # Calculate the age of the tag in seconds
            tag_age=$((current_date - tag_date))

            # If tag is older than 10 minutes, delete it locally and from the remote
            if [ $tag_age -gt $ten_minutes ]; then
              echo "Deleting tag: $tag_name"
              git tag -d "$tag_name"
              git push --delete origin "$tag_name"
            fi
          done


      # Generate a tag for the commit and push it
      - name: Auto tag
        if: github.ref == 'refs/heads/main'
        run: |
          # Get the latest commit hash and short hash
          COMMIT_HASH=$(git rev-parse HEAD)
          SHORT_HASH=$(git rev-parse --short HEAD)
          
          # Define the tag (you can customize this format)
          TAG="v1.0.${{ github.run_number }}-${SHORT_HASH}"
          
          # Create the tag
          git tag $TAG

          # Push the tag to the repository
          git push origin $TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

