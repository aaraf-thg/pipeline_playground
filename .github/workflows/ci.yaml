name: CI Pipeline with Auto Tagging

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

#      - name: Delete Tags
#        run: |
#          git fetch --all --tags
#          NOW=$(date +%s)
#
#          # Get all tags and their commit dates
#          for TAG in $(git tag); do
#            # Get the commit date (in seconds since the epoch) for the tag
#            TAG_COMMIT_DATE=$(git log -1 --format=%ct "$TAG")
#            
#            # Calculate the age of the tag (in seconds)
#            AGE=$((NOW - TAG_COMMIT_DATE))
#            threshold=600
#            # for 6 months instead of 10 mins
#            # threshold=15,552,000
#            # If the tag is older than 600 seconds (10 minutes)
#            if [ "$AGE" -gt "$threshold" ]; then
#              echo "Deleting tag: $TAG (Age: $((AGE / 60)) minutes)"
#
#              # Delete the tag locally and remotely
#              git tag -d "$TAG" || echo "Tag $TAG not found locally"
#              git push --delete origin "$TAG" || echo "Tag $TAG not found remotely"
#            else
#              echo "Skipping tag: $TAG (Age: $((AGE / 60)) minutes)"
#            fi
#          done
#
#
#      # Generate a tag for the commit and push it
#      - name: Auto tag
#        if: github.ref == 'refs/heads/main'
#        run: |
#          # Get the latest commit hash and short hash
#          COMMIT_HASH=$(git rev-parse HEAD)
#          SHORT_HASH=$(git rev-parse --short HEAD)
#          
#          # Define the tag (you can customize this format)
#          TAG="v1.0.${{ github.run_number }}-${SHORT_HASH}"
#          
#          # Create the tag
#          git tag $TAG
#
#          # Push the tag to the repository
#          git push origin $TAG
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
         npm config set registry https://npm.pkg.github.com
         npm set "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}"
         echo -e "registry=https://npm.pkg.github.com/\n//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
         git config user.name "${{ github.actor }}"
         git config user.email "${{ github.actor}}@users.noreply.github.com"
      - name: Lerna Publish
        run: |
         lerna publish --conventional-commits --no-commit-hooks --yes > changes.txt
         echo "changes below"
         cat changes.txt

      - name: Upload changes.txt
        uses: actions/upload-artifact@v3
        with:
          name: changes
          path: changes.txt

  review:
     uses: ./.github/workflows/changes.yaml
     needs: build

  empty-file:
    runs-on: ubuntu-latest
    needs: review

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Download the artifact
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: changes
      # Step 3: Empty the file (Assume we are emptying `file.txt` inside the artifact)
      - name: Empty the file
        run: |
          > changes.txt  # This command will empty the file
          cat changes.txt

      # Step 4: Re-upload the updated artifact with the empty file
      - name: Upload updated artifact
        uses: actions/upload-artifact@v3
        with:
          name: changes  # Replace with your artifact name
          path: changes.txt  # Re-upload the empty file
